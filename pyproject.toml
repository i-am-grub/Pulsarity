[project]
name = "Pulsarity"
version = "0.1.0-dev"
description = "A demonstrator project for a RotorHazard variant"
authors = [
    { name = "Bryce Gruber", email = "dev@brycegruber.com"}
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.11,<4.0"
classifiers = [
    "Framework :: AsyncIO",
    "License :: OSI Approved :: MIT License"
]

dependencies = [
    "starlette (>=0.46.1,<0.47.0)",
    "starsessions (>=2.2.1,<3.0.0)",
    "aiosqlite (>=0.20.0,<0.21.0)",
    "hypercorn (>=0.17.3,<0.18.0)",
    "uvloop (>=0.21.0,<0.22.0) ; sys_platform == \"linux\" or sys_platform == \"darwin\"",
    "winloop (>=0.1.7,<0.2.0) ; sys_platform == \"win32\"",
    "cryptography (>=44.0.1,<45.0.0)",
    "argon2-cffi (>=23.1.0,<24.0.0)",
    "tomlkit (>=0.13.2,<0.14.0)",
    "tortoise-orm (>=0.25.0,<0.26.0)",
    "pydantic (>=2.11.0,<2.12.0)",
]

[project.urls]
repository = "https://github.com/i-am-grub/Pulsarity"

[project.optional-dependencies]
pgsql = [ "asyncpg>=0.30,<0.31" ]

[tool.poetry]
package-mode = true
include = ["src/pulsarity/py.typed"]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
start = "pulsarity.__main__:main"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"
black = "^24.10.0"
mypy = "^1.13.0"
tox = "^4.23.2"
tox-gh-actions = "^3.2.0"
pylint = "^3.3.2"
ruff = "^0.9.7"
httpx = "^0.28.1"
httpx-ws = "^0.7.2"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "*"
Sphinx-Substitution-Extensions = "*"
sphinx-copybutton = "*"
myst-parser = "^4.0.0"
sphinx-book-theme = "^1.1.3"
sphinx-intl = "^2.3.1"

[tool.mypy]
exclude = ["tests"]

[tool.pytest.ini_options]
addopts = "--no-cov-on-fail --showlocals --strict-markers"
asyncio_default_fixture_loop_scope = "session"
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.pylint]
ignore = "tests"

[tool.tox]
requires = ["tox>=4"]
env_list = ["pylint", "black", "mypy", "3.13", "3.12", "3.11"]

[tool.tox.env_run_base]
description = "run unit tests"
deps = [
    "pytest>=8",
    "pytest-asyncio",
    "pytest-cov",
    "httpx",
    "httpx-ws"
]
commands = [["pytest", {cov="src",  replace = "posargs", default = ["tests"], extend = true }]]

[tool.tox.env.style]
description = "run black"
skip_install = true
deps = ["black"]
commands = [["black", { replace = "posargs", default = ["src/pulsarity"], extend = true} ]]

[tool.tox.env.mypy]
description = "run mypy"
deps = ["mypy"]
commands = [["mypy", { replace = "posargs", default = ["src/pulsarity"], extend = true} ]]

[tool.tox.env.pylint]
description = "run pylint"
deps = ["pylint"]
commands = [["pylint", "--recursive=y", { replace = "posargs", default = ["src/pulsarity"], extend = true} ]]